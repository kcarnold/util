#!/usr/bin/env python
"""
Count the number of files in each subdirectory.
"""

from __future__ import print_function

import os
import argparse

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('root', nargs='?', default='.',
                        help="Directory to start at")
    parser.add_argument('--threshold', type=int, default=1000,
                        help="Group subdirectories with fewer than this number of files")
    opts = parser.parse_args()

    pairs = []

    def count_subtree(d):
        total = 0
        try:
            scandir_iterator = os.scandir(d)
        except OSError:
            return 0

        # Cloes the iterator when done
        with scandir_iterator:
            while True:
                try:
                    entry = next(scandir_iterator)
                except StopIteration:
                    break
                except OSError:
                    continue

                if entry.is_symlink():
                    continue
                if entry.is_dir():
                    full_path = os.path.join(d, entry)
                    new_count = count_subtree(full_path)
                    if new_count > opts.threshold:
                        pairs.append((new_count, full_path))
                        print(new_count, full_path, flush=True)
                    else:
                        total += new_count
                else:
                    total += 1
            return total

    other = count_subtree(os.path.abspath(opts.root))
    pairs.append((other, '(other)'))
    total = sum(count for count, ent in pairs)
    print('\n\n')
    pairs.sort()
    for count, subdir in pairs:
        print('{:7d} {}'.format(count, subdir))
    print("\nTotal", total)
