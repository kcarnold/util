#!/usr/bin/env python
from __future__ import print_function

import os, pathlib



def count_files_in_directory(d):
    num_files = 0
    for root, dirs, files in os.walk(d):
        num_files += len(files)
    return num_files


def subdirs(dir):
    paths = (os.path.join(dir, name) for name in os.listdir(dir))
    return [path for path in paths if os.path.isdir(path) and not os.path.islink(path)]

if __name__ == '__main__':
    import sys
    root = sys.argv[1] if len(sys.argv) > 1 else '.'
    pairs = []
    threshold = 10000

    def count_subtree(d):
        total = 0
        for entry in d.iterdir():
            if entry.is_dir():
                new_count = count_subtree(entry)
                if new_count > threshold:
                    pairs.append((new_count, entry))
                    print(new_count, entry, flush=True)
                else:
                    total += new_count
            else:
                total += 1
        return total

    other = count_subtree(pathlib.Path(root))
    pairs.append((other, '(other)'))
    total = sum(count for count, ent in pairs)
    print('\n\n')
    pairs.sort()
    for count, subdir in pairs:
        print('{:7d} {}'.format(count, subdir))
    print("\nTotal", total)
